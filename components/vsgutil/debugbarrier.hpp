#ifndef VSGOPENMW_VSGUTIL_DEBUGBARRIER_H
#define VSGOPENMW_VSGUTIL_DEBUGBARRIER_H

#include <vsg/commands/PipelineBarrier.h>

namespace vsgUtil
{
    vsg::ref_ptr<vsg::PipelineBarrier> debugBarrier()
    {
        auto allAccessBits = VK_ACCESS_INDIRECT_COMMAND_READ_BIT | VK_ACCESS_INDEX_READ_BIT
            | VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT | VK_ACCESS_UNIFORM_READ_BIT | VK_ACCESS_INPUT_ATTACHMENT_READ_BIT
            | VK_ACCESS_SHADER_READ_BIT | VK_ACCESS_SHADER_WRITE_BIT | VK_ACCESS_COLOR_ATTACHMENT_READ_BIT
            | VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT | VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT
            | VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT | VK_ACCESS_TRANSFER_READ_BIT | VK_ACCESS_TRANSFER_WRITE_BIT
            | VK_ACCESS_HOST_READ_BIT | VK_ACCESS_HOST_WRITE_BIT;
        return vsg::PipelineBarrier::create(VK_PIPELINE_STAGE_ALL_COMMANDS_BIT, VK_PIPELINE_STAGE_ALL_COMMANDS_BIT, 0,
            vsg::MemoryBarrier::create(allAccessBits, allAccessBits));
    }
}

#endif
